pipeline {
    agent any
    environment {
        TAG              = "3.0.${BUILD_NUMBER}"
        AWS_REGION       = "eu-west-2"
    }

   parameters {
        choice(
            description: 'Deploy to Jobs or to Community?',
            name: 'environment',
            choices: ['DEV-jobs', 'DEV-community', 'UAT-jobs', 'UAT-community', 'PROD-jobs', 'PROD-community']
             )
    }
    stages {
        stage("Release scope") {
            steps {
                script {
                    // Prepare a list and write to file
                    sh "aws s3api list-objects --bucket restless-jenkins-build  --query 'Contents[].{Key: Key}' --output text > ${WORKSPACE}/list"

                    // Load the list into a variable
                    env.LIST = readFile (file: "${WORKSPACE}/list")

                    // Show the select input
                    env.RELEASE_SCOPE = input message: 'User input required', ok: 'Release!',
                            parameters: [choice(name: 'Version', choices: env.LIST, description: 'What is the release scope?')]
                }
                echo "Release scope selected: ${env.RELEASE_SCOPE}"
            }
        }
        stage('Deploy DEV jobs') {
        when {
            expression { params.environment == 'DEV-jobs' }
            }
        environment {
            VERSION = "${params.Version}"
            ZIP_BALL = sh(script: 'echo \$VERSION | cut -d"/" -f 5', , returnStdout: true).trim()
            }
        steps {
            withAWS(region: env.AWS_REGION ,credentials:'restless-test-deployflow') {
                sh "echo $ZIP_BALL"
            }
            }
        }
        // stage("Build") {
        //     steps {
        //          sh '''
        //          echo ${GIT_BRANCH}
        //          git_branch=$(echo $GIT_BRANCH | sed -e 's/-//g' | sed -e 's/origin//g' | cut -c2-50)
        //          echo $git_branch
        //          touch one.txt
        //          zip one.zip one.txt
        //          //php build.php ${TAG} echo $git_branch
        //          '''
        //     }
            // post {
            //       always {
            //         archiveArtifacts artifacts: '*.zip'
            //     }
            // }
       // }
     }
}